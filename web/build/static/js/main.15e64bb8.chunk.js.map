{"version":3,"sources":["Components/login.jsx","Components/signup.jsx","Components/dashboard.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["baseURL","window","location","hostname","split","validationSchema","yup","email","required","password","Login","history","useHistory","formik","useFormik","initialValues","onSubmit","values","axios","post","then","res","data","alert","localStorage","setItem","push","catch","err","style","margin","textAlign","color","textDecoration","textDecorationColor","handleSubmit","Stack","spacing","TextField","fullWidth","id","label","variant","name","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","width","marginLeft","onClick","fullName","address","min","number","Signup","Dashboard","React","Data","setData","Posts","setPosts","submit","Email","getItem","console","log","message","get","makeStyles","theme","root","height","yellowPaper","backgroundColor","yellow","customBorder","border","customBorderRadius","borderRadius","useStyles","className","Box","map","eachData","App","Navbar","bg","expand","Container","Brand","href","fontWeight","Toggle","Collapse","Nav","Link","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAWMA,EAAqD,cAA3CC,OAAOC,SAASC,SAASC,MAAM,KAAK,GAFxC,wBAEmE,GACzEC,EAAmBC,IAAW,CAChCC,MAAOD,IACC,gBACPC,MAAM,eACNC,SAAS,0BACVC,SAAUH,IACF,gBACPE,SAAS,0BAkFCE,MAhFf,WACI,IAAIC,EAAUC,cACRC,EAASC,YAAU,CACrBT,iBAAkBA,EAClBU,cAAc,CACVR,MAAO,GACPE,SAAU,IAEZO,SAEN,SAA0BC,GACtBC,IAAMC,KAAN,UAAcnB,EAAd,iBAAqC,CACjCO,MAAOU,EAAOV,MACdE,SAAUQ,EAAOR,WAEpBW,MAAK,SAAAC,GACF,GAAGA,EAAIC,KAAKf,MAAM,CACdgB,MAAM,qBACN,IAAMhB,EAAQU,EAAOV,MACrBiB,aAAaC,QAAQ,QAASlB,GAC9BI,EAAQe,KAAK,kBAIpBC,OAAM,SAAAC,GACHL,MAAM,yCAId,OACI,sBAAKM,MAAO,CAAEC,OAAQ,eAAtB,UACF,uBACA,oBAAID,MAAO,CAAEE,UAAW,SAAUC,MAAO,aAAcC,eAAgB,sBAAuBC,oBAAqB,SAAnH,mBACA,uBAEA,sBAAMlB,SAAUH,EAAOsB,aAAvB,SACE,eAACC,EAAA,EAAD,CAAOC,QAAS,EAAhB,UAEE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTP,MAAM,UACNQ,GAAG,iBACHC,MAAM,QACNC,QAAQ,WAERC,KAAK,QACLC,MAAO/B,EAAOI,OAAOV,MACrBsC,SAAUhC,EAAOiC,aAEjBC,MAAOlC,EAAOmC,QAAQzC,OAAS0C,QAAQpC,EAAOqC,OAAO3C,OACrD4C,WAAYtC,EAAOmC,QAAQzC,OAASM,EAAOqC,OAAO3C,QAGpD,cAAC+B,EAAA,EAAD,CACEC,WAAS,EACTP,MAAM,UACNQ,GAAG,eACHC,MAAM,WACNC,QAAQ,WACRU,KAAK,WAELT,KAAK,WACLC,MAAO/B,EAAOI,OAAOR,SACrBoC,SAAUhC,EAAOiC,aAEjBC,MAAOlC,EAAOmC,QAAQvC,UAAYwC,QAAQpC,EAAOqC,OAAOzC,UACxD0C,WAAYtC,EAAOmC,QAAQvC,UAAYI,EAAOqC,OAAOzC,WAEvD,gCACE,cAAC4C,EAAA,EAAD,CAAQxB,MAAO,CAAEyB,MAAO,OAASZ,QAAQ,YAAYV,MAAM,UAAUoB,KAAK,SAA1E,mBACA,cAACC,EAAA,EAAD,CAAQxB,MAAO,CAAEyB,MAAO,MAAOC,WAAW,OAASC,QAAS,WAAQ7C,EAAQe,KAAK,YAAcgB,QAAQ,YAAYV,MAAM,UAAzH,2CChFNhC,EAAqD,cAA3CC,OAAOC,SAASC,SAASC,MAAM,KAAK,GAFxC,wBAEmE,GACzEC,EAAmBC,IAAW,CAClCmD,SAAUnD,IACF,gBACPE,SAAS,0BACVD,MAAOD,IACC,gBACPC,MAAM,eACNC,SAAS,0BACVkD,QAASpD,IACD,gBACPE,SAAS,0BACVC,SAAUH,IACF,gBACPqD,IAAI,EAAG,8CACPnD,SAAS,wBACVoD,OAAQtD,IACA,qBAGPE,SAAS,wBAiIGqD,MA9Hf,WACE,IAAIlD,EAAUC,cACRC,EAASC,YAAU,CACvBT,iBAAkBA,EAClBU,cAAc,CACZ0C,SAAU,GACVlD,MAAO,GACPE,SAAS,GACTiD,QAAQ,GACRE,OAAO,IAET5C,SAEF,SAA0BC,GACxBC,IAAMC,KAAN,UAAcnB,EAAd,kBAAsC,CACpCyD,SAAUxC,EAAOwC,SACjBlD,MAAOU,EAAOV,MACdE,SAAUQ,EAAOR,SACjBiD,QAASzC,EAAOyC,QAChBE,OAAQ3C,EAAO2C,SAGhBxC,MAAK,SAAAC,GACJE,MAAM,gBACNZ,EAAQe,KAAK,aAEdC,OAAM,SAACC,GACNL,MAAM,+DAGV,OACE,sBAAKM,MAAO,CAAEC,OAAQ,eAAtB,UACQ,oBAAID,MAAO,CAAEE,UAAW,SAAUC,MAAO,aAAcC,eAAgB,sBAAuBC,oBAAqB,SAAnH,oBACA,uBACA,sBAAMlB,SAAUH,EAAOsB,aAAvB,SACI,eAACC,EAAA,EAAD,CAAOC,QAAS,EAAhB,UAEI,cAACC,EAAA,EAAD,CACIC,WAAS,EACTP,MAAM,UACNQ,GAAG,iBACHC,MAAM,YACNC,QAAQ,WAERC,KAAK,WACLC,MAAO/B,EAAOI,OAAOwC,SACrBZ,SAAUhC,EAAOiC,aAEjBC,MAAOlC,EAAOmC,QAAQS,UAAYR,QAAQpC,EAAOqC,OAAOO,UACxDN,WAAYtC,EAAOmC,QAAQS,UAAY5C,EAAOqC,OAAOO,WAGzD,cAACnB,EAAA,EAAD,CACIC,WAAS,EACTP,MAAM,UACNQ,GAAG,iBACHC,MAAM,UACNC,QAAQ,WAERC,KAAK,UACLC,MAAO/B,EAAOI,OAAOyC,QACrBb,SAAUhC,EAAOiC,aAEjBC,MAAOlC,EAAOmC,QAAQU,SAAWT,QAAQpC,EAAOqC,OAAOQ,SACvDP,WAAYtC,EAAOmC,QAAQU,SAAW7C,EAAOqC,OAAOQ,UAGxD,cAACpB,EAAA,EAAD,CACIC,WAAS,EACTP,MAAM,UACNQ,GAAG,iBACHC,MAAM,SACNC,QAAQ,WAERC,KAAK,SACLC,MAAO/B,EAAOI,OAAO2C,OACrBf,SAAUhC,EAAOiC,aAEjBC,MAAOlC,EAAOmC,QAAQY,QAAUX,QAAQpC,EAAOqC,OAAOU,QACtDT,WAAYtC,EAAOmC,QAAQY,QAAU/C,EAAOqC,OAAOU,SAGvD,cAACtB,EAAA,EAAD,CACIC,WAAS,EACTP,MAAM,UACNQ,GAAG,iBACHC,MAAM,QACNC,QAAQ,WAERC,KAAK,QACLC,MAAO/B,EAAOI,OAAOV,MACrBsC,SAAUhC,EAAOiC,aAEjBC,MAAOlC,EAAOmC,QAAQzC,OAAS0C,QAAQpC,EAAOqC,OAAO3C,OACrD4C,WAAYtC,EAAOmC,QAAQzC,OAASM,EAAOqC,OAAO3C,QAGtD,cAAC+B,EAAA,EAAD,CACIC,WAAS,EACTP,MAAM,UACNQ,GAAG,eACHC,MAAM,WACNC,QAAQ,WACRU,KAAK,WAELT,KAAK,WACLC,MAAO/B,EAAOI,OAAOR,SACrBoC,SAAUhC,EAAOiC,aAEjBC,MAAOlC,EAAOmC,QAAQvC,UAAYwC,QAAQpC,EAAOqC,OAAOzC,UACxD0C,WAAYtC,EAAOmC,QAAQvC,UAAYI,EAAOqC,OAAOzC,WAEzD,uBACA,gCACI,cAAC4C,EAAA,EAAD,CAAQxB,MAAO,CAAEyB,MAAO,MAAOxB,OAAQ,QAAUY,QAAQ,YAAYV,MAAM,UAAUoB,KAAK,SAA1F,oBACA,cAACC,EAAA,EAAD,CAAQxB,MAAO,CAAEyB,MAAO,MAAOC,WAAW,OAASC,QAAS,WAAQ7C,EAAQe,KAAK,WAAagB,QAAQ,YAAYV,MAAM,UAAxH,2C,2CCvIlBhC,EAAqD,cAA3CC,OAAOC,SAASC,SAASC,MAAM,KAAK,GAFxC,wBAEmE,GA+FhE0D,MA9Ff,WACI,MAAwBC,WAAe,IAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,WAAe,IAAzC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,YAAe,GAA3C,mBAAOK,EAAP,UACAL,aAAgB,WACZ,IAAMM,EAAQ7C,aAAa8C,QAAQ,SAanC,OAZAC,QAAQC,IAAIH,GACZnD,IAAMC,KAAN,UAAcnB,EAAd,mBAAwC,CACpCO,MAAO8D,IAEVjD,MAAK,SAACC,GACC,IAAIC,EAAOD,EAAIC,KACf2C,EAAQ3C,GACRiD,QAAQC,IAAIR,MAEnBrC,OAAM,SAACC,GACA2C,QAAQC,IAAI5C,EAAI6C,YAEjB,WACHF,QAAQC,IAAI,eAEjB,IACHT,aAAgB,WACZ7C,IAAMwD,IAAN,UAAa1E,EAAb,oBACCoB,MAAK,SAACC,GACH8C,EAAS9C,EAAIC,MACbiD,QAAQC,IAAIN,QAElB,CAACE,IACH,IAAM/D,EAAmBC,IAAW,CAChCa,KAAMb,IACM,gBACPE,SAAS,4BAuClB,OArCeM,YAAU,CACrBT,iBAAkBA,EAClBU,cAAe,CACXI,KAAM,IAEVH,SAAU,SAACC,GACPC,IAAMC,KAAN,UAAcnB,EAAd,gBAAoC,CAChCO,MAAOiB,aAAa8C,QAAQ,SAC5BnD,KAAMF,EAAOE,OAEhBC,MAAK,SAACC,GACHkD,QAAQC,IAAInD,MAEfM,OAAM,SAACC,GACJ2C,QAAQC,IAAI5C,EAAI6C,eAIVE,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJ,QAAS,CACP/C,OAAQ8C,EAAMvC,QAAQ,GACtBiB,MAAOsB,EAAMvC,QAAQ,IACrByC,OAAQF,EAAMvC,QAAQ,MAG1B0C,YAAa,CACXC,gBAAiBC,IAAO,MAE1BC,aAAc,CACZC,OAAO,aAAD,OAAeF,IAAO,OAE9BG,mBAAoB,CAClBC,aAAc,OAGJC,GAEZ,qBAAKC,UAAU,YAAf,SACI,eAACC,EAAA,EAAD,WACI,2CACA,gDAEIxB,EAAKyB,KAAI,SAAAC,GACL,OACI,gCACI,kDAAmBA,EAASjC,YAC5B,8CAAeiC,EAASnF,SACxB,gDAAiBmF,EAAShC,uBC3C3CiC,MAzCf,WACE,IAAIhF,EAAUC,cACZ,OACE,qCACA,cAACgF,EAAA,EAAD,CAAQC,GAAG,OAAOC,OAAO,KAAzB,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAQpE,MAAO,CAACG,MAAM,QAAQkE,WAAW,UAA5D,gCACA,cAACN,EAAA,EAAOO,OAAR,CAAe,gBAAc,qBAC7B,cAACP,EAAA,EAAOQ,SAAR,CAAiB5D,GAAG,mBAApB,SACE,eAAC6D,EAAA,EAAD,CAAKd,UAAU,SAAf,UACE,cAACc,EAAA,EAAIC,KAAL,CAAU9C,QAAS,WAAQ7C,EAAQe,KAAK,eAAiBG,MAAO,CAACG,MAAM,QAAQkE,WAAW,UAA1F,uBACA,cAACG,EAAA,EAAIC,KAAL,CAAU9C,QAAS,WAAQ7C,EAAQe,KAAK,MAAQG,MAAO,CAACG,MAAM,QAAQkE,WAAW,UAAjF,oBAEA,cAACG,EAAA,EAAIC,KAAL,CAAU9C,QAAS,WAAQ7C,EAAQe,KAAK,WAAaG,MAAO,CAACG,MAAM,QAAQkE,WAAW,UAAtF,6BAQR,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,KAAK,SAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,IAAlB,SACE,cAAC,EAAD,aChCKE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvF,MAAK,YAAkD,IAA/CwF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACA,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.15e64bb8.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {useFormik} from 'formik';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\nimport {\r\n    useHistory\r\n} from 'react-router-dom';\r\nconst dev = 'http://localhost:8000';\r\n\r\nconst baseURL = window.location.hostname.split(':')[0] === 'localhost' ? dev : \"\"\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n    .string('Enter string')\r\n    .email('Enter email')\r\n    .required('this field is required'),\r\n    password: yup\r\n    .string('enter string')\r\n    .required('password is required')\r\n  })\r\nfunction Login(){\r\n    let history = useHistory();\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues:{\r\n            email: '',\r\n            password: ''\r\n          },\r\n          onSubmit: onSubmitFunction\r\n    })\r\n    function onSubmitFunction(values){\r\n        axios.post(`${baseURL}/api/v1/login`,{\r\n            email: values.email,\r\n            password: values.password\r\n        })\r\n        .then(res=>{\r\n            if(res.data.email){\r\n                alert('login successfull');\r\n                const email = values.email;\r\n                localStorage.setItem('email', email)\r\n                history.push('/dashboard');\r\n            }\r\n           \r\n        })\r\n        .catch(err=>{\r\n            alert('login unsuccessfull error found');\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div style={{ margin: \"0 20% 0 20%\" }}>\r\n      <br />\r\n      <h1 style={{ textAlign: \"center\", color: \"whitesmoke\", textDecoration: \"5px solid underline\", textDecorationColor: \"brown\" }}>Login</h1>\r\n      <br />\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Stack spacing={2}>\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"filled-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          /> \r\n          <div>\r\n            <Button style={{ width: \"20%\",}} variant=\"contained\" color=\"primary\" type=\"submit\">Login</Button>\r\n            <Button style={{ width: \"20%\", marginLeft:\"5px\" }} onClick={() => { history.push(\"/signup\") }} variant=\"contained\" color=\"primary\">I have no account</Button>\r\n          </div>\r\n        </Stack>\r\n\r\n      </form>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import axios from 'axios';\r\nimport {useFormik} from 'formik';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\nimport {\r\n  useHistory\r\n} from \"react-router-dom\";\r\nconst dev = 'http://localhost:8000';\r\n\r\nconst baseURL = window.location.hostname.split(':')[0] === 'localhost' ? dev : \"\"\r\nconst validationSchema = yup.object({\r\n  fullName: yup\r\n  .string('Enter String')\r\n  .required('this field is required'),\r\n  email: yup\r\n  .string('Enter string')\r\n  .email('Enter email')\r\n  .required('this field is required'),\r\n  address: yup\r\n  .string('Enter String')\r\n  .required('this field is required'),\r\n  password: yup\r\n  .string('enter string')\r\n  .min(8, 'Password should be of minimum 8 characters')\r\n  .required('password is required'),\r\n  number: yup\r\n  .number('Enter your Number')\r\n  // .min(11, 'Number should be of minimum 11 characters length')\r\n  // .max(20, 'No more then 15')\r\n  .required('Number is required'),\r\n\r\n})\r\nfunction Signup() {\r\n  let history = useHistory();\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues:{\r\n      fullName: '',\r\n      email: '',\r\n      password:'',\r\n      address:'',\r\n      number:''\r\n    },\r\n    onSubmit: onSubmitFunction\r\n  });\r\n  function onSubmitFunction(values){\r\n    axios.post(`${baseURL}/api/v1/signup`,{\r\n      fullName: values.fullName,\r\n      email: values.email,\r\n      password: values.password,\r\n      address: values.address,\r\n      number: values.number\r\n\r\n    })\r\n    .then(res=>{\r\n      alert('data Written');\r\n      history.push('/login');\r\n    })\r\n    .catch((err)=>{\r\n      alert('Some thing went wrong please try with different email');\r\n    })\r\n  }\r\n  return (\r\n    <div style={{ margin: \"0 20% 0 20%\" }}>\r\n            <h1 style={{ textAlign: \"center\", color: \"whitesmoke\", textDecoration: \"5px solid underline\", textDecorationColor: \"brown\" }}>SignUp</h1>\r\n            <br />\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Stack spacing={2}>\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Full Name\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"fullName\"\r\n                        value={formik.values.fullName}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.fullName && Boolean(formik.errors.fullName)}\r\n                        helperText={formik.touched.fullName && formik.errors.fullName}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Address\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"address\"\r\n                        value={formik.values.address}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.address && Boolean(formik.errors.address)}\r\n                        helperText={formik.touched.address && formik.errors.address}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Number\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"number\"\r\n                        value={formik.values.number}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.number && Boolean(formik.errors.number)}\r\n                        helperText={formik.touched.number && formik.errors.number}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Email\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"email\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"filled-basic\"\r\n                        label=\"Password\"\r\n                        variant=\"outlined\"\r\n                        type=\"password\"\r\n\r\n                        name=\"password\"\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.password && Boolean(formik.errors.password)}\r\n                        helperText={formik.touched.password && formik.errors.password}\r\n                    />\r\n                    <br />\r\n                    <div>\r\n                        <Button style={{ width: \"20%\", margin: 'auto' }} variant=\"contained\" color=\"primary\" type=\"submit\">Signup</Button>\r\n                        <Button style={{ width: \"20%\", marginLeft:\"5px\" }} onClick={() => { history.push(\"/login\") }} variant=\"contained\" color=\"primary\">I have an account</Button>\r\n          \r\n                    </div>\r\n                </Stack>\r\n\r\n            </form>\r\n\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\n// import Divider from '@mui/material/Divider';\r\nimport axios from 'axios';\r\n// import { TextField, Button } from '@mui/material';\r\nimport { useFormik } from 'formik';\r\n// import Stack from '@mui/material/Stack';\r\n// import Typography from '@mui/material/Typography';\r\n// import Paper from '@mui/material/Paper';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport yellow from \"@material-ui/core/colors/yellow\";\r\nimport * as yup from 'yup';\r\nconst dev = 'http://localhost:8000';\r\n\r\nconst baseURL = window.location.hostname.split(':')[0] === 'localhost' ? dev : \"\"\r\nfunction Dashboard() {\r\n    const [Data, setData] = React.useState([]);\r\n    const [Posts, setPosts] = React.useState([]);\r\n    const [submit, setSubmit] = React.useState(false);\r\n    React.useEffect(() => {\r\n        const Email = localStorage.getItem('email')\r\n        console.log(Email);\r\n        axios.post(`${baseURL}/api/v1/profile`, {\r\n            email: Email\r\n        })\r\n        .then((res) => {\r\n                let data = res.data\r\n                setData(data);\r\n                console.log(Data);\r\n        })\r\n        .catch((err) => {\r\n                console.log(err.message);\r\n        })\r\n        return () => {\r\n            console.log('clean up')\r\n        }\r\n    }, [])\r\n    React.useEffect(()=>{\r\n        axios.get(`${baseURL}/api/v1/getpost`)\r\n        .then((res)=>{\r\n            setPosts(res.data);\r\n            console.log(Posts);\r\n        })\r\n    },[submit])\r\n    const validationSchema = yup.object({\r\n        post: yup\r\n            .string('Enter string')\r\n            .required('this field is required')\r\n    })\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            post: ''\r\n        },\r\n        onSubmit: (values) => {\r\n            axios.post(`${baseURL}/api/v1/post`,{\r\n                email: localStorage.getItem('email'),\r\n                post: values.post\r\n            })\r\n            .then((res)=>{\r\n                console.log(res);\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err.message);\r\n            })\r\n        }\r\n    })\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          \"& > *\": {\r\n            margin: theme.spacing(1),\r\n            width: theme.spacing(32),\r\n            height: theme.spacing(16)\r\n          }\r\n        },\r\n        yellowPaper: {\r\n          backgroundColor: yellow[300]\r\n        },\r\n        customBorder: {\r\n          border: `3px solid ${yellow[200]}`\r\n        },\r\n        customBorderRadius: {\r\n          borderRadius: 25\r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Box>\r\n                <h1>Dashboard</h1>\r\n                <h3> Profile Info </h3>\r\n                {\r\n                    Data.map(eachData => {\r\n                        return (\r\n                            <div>\r\n                                <h5>{`Full Name: ${eachData.fullName}`}</h5>\r\n                                <h5>{`Email: ${eachData.email}`}</h5>\r\n                                <h5>{`Address: ${eachData.address}`}</h5>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </Box>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\r\nimport Login from './Components/login';\r\nimport Signup from './Components/signup';\r\n\r\nimport Dashboard from './Components/dashboard';\r\nfunction App(){\r\n  let history = useHistory();\r\n    return(\r\n      <>\r\n      <Navbar bg=\"dark\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\" style={{color:\"white\",fontWeight:\"bolder\"}}>Registeration Form</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"m-auto\">\r\n              <Nav.Link onClick={() => { history.push(\"/dashboard\") }} style={{color:\"white\",fontWeight:\"bolder\"}}>Dashboard</Nav.Link>\r\n              <Nav.Link onClick={() => { history.push(\"/\") }} style={{color:\"white\",fontWeight:\"bolder\"}}>Signup</Nav.Link>\r\n\r\n              <Nav.Link onClick={() => { history.push(\"/login\") }} style={{color:\"white\",fontWeight:\"bolder\"}}>Login</Nav.Link>\r\n\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n\r\n        <Route path=\"/dashboard\">\r\n          <Dashboard />\r\n        </Route>\r\n\r\n        <Route exact path=\"/\">\r\n          <Signup />\r\n        </Route>\r\n\r\n      </Switch>\r\n\r\n    </>\r\n   \r\n  )\r\n  \r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n    <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}