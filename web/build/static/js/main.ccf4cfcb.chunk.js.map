{"version":3,"sources":["Components/login.jsx","Components/signup.jsx","Components/dashboard.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["baseURL","window","location","hostname","split","validationSchema","yup","email","required","password","Login","history","useHistory","formik","useFormik","initialValues","onSubmit","values","axios","post","then","res","data","alert","localStorage","setItem","push","catch","err","className","handleSubmit","Stack","spacing","TextField","color","id","label","variant","type","name","value","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","fullName","address","min","Signup","Dashboard","React","Data","setData","Posts","setPosts","submit","setSubmit","Email","getItem","console","log","message","get","classes","makeStyles","theme","root","margin","width","height","yellowPaper","backgroundColor","yellow","customBorder","border","customBorderRadius","borderRadius","useStyles","Box","map","eachData","Divider","multiline","rows","onClick","Typography","gutterBottom","Paper","elevation","p","App","sx","flexGrow","AppBar","position","Toolbar","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccf4cfcb.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {useFormik} from 'formik';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\nimport {\r\n    useHistory\r\n} from 'react-router-dom';\r\nconst dev = 'http://localhost:8000';\r\n\r\nconst baseURL = window.location.hostname.split(':')[0] === 'localhost' ? dev : \"\"\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n    .string('Enter string')\r\n    .email('Enter email')\r\n    .required('this field is required'),\r\n    password: yup\r\n    .string('enter string')\r\n    .required('password is required')\r\n  })\r\nfunction Login(){\r\n    let history = useHistory();\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues:{\r\n            email: '',\r\n            password: ''\r\n          },\r\n          onSubmit: onSubmitFunction\r\n    })\r\n    function onSubmitFunction(values){\r\n        axios.post(`${baseURL}/api/v1/login`,{\r\n            email: values.email,\r\n            password: values.password\r\n        })\r\n        .then(res=>{\r\n            if(res.data.email){\r\n                alert('login successfull');\r\n                const email = values.email;\r\n                localStorage.setItem('email', email)\r\n                history.push('/dashboard');\r\n            }\r\n           \r\n        })\r\n        .catch(err=>{\r\n            alert('login unsuccessfull error found');\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"login\">\r\n            <h1> Log In</h1>\r\n       <form onSubmit={formik.handleSubmit}>\r\n        <Stack spacing={3}>\r\n          <TextField\r\n            \r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            type = \"email\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n\r\n          <TextField\r\n            \r\n            color=\"primary\"\r\n            type=\"password\"\r\n            id=\"filled-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n\r\n          <Button  variant=\"contained\" color=\"primary\" type=\"submit\">Log in</Button>\r\n        </Stack>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import axios from 'axios';\r\nimport {useFormik} from 'formik';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\nimport {\r\n  useHistory\r\n} from \"react-router-dom\";\r\nconst dev = 'http://localhost:8000';\r\n\r\nconst baseURL = window.location.hostname.split(':')[0] === 'localhost' ? dev : \"\"\r\nconst validationSchema = yup.object({\r\n  fullName: yup\r\n  .string('Enter String')\r\n  .required('this field is required'),\r\n  email: yup\r\n  .string('Enter string')\r\n  .email('Enter email')\r\n  .required('this field is required'),\r\n  address: yup\r\n  .string('Enter String')\r\n  .required('this field is required'),\r\n  password: yup\r\n  .string('enter string')\r\n  .min(8, 'Password should be of minimum 8 characters')\r\n  .required('password is required')\r\n})\r\nfunction Signup() {\r\n  let history = useHistory();\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues:{\r\n      fullName: '',\r\n      email: '',\r\n      password:'',\r\n      address:''\r\n    },\r\n    onSubmit: onSubmitFunction\r\n  });\r\n  function onSubmitFunction(values){\r\n    axios.post(`${baseURL}/api/v1/signup`,{\r\n      fullName: values.fullName,\r\n      email: values.email,\r\n      password: values.password,\r\n      address: values.address\r\n    })\r\n    .then(res=>{\r\n      alert('data Written');\r\n      history.push('/login');\r\n    })\r\n    .catch((err)=>{\r\n      alert('Some thing went wrong please try with different email');\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>  Sign Up </h1>\r\n       <form onSubmit={formik.handleSubmit}>\r\n        <Stack spacing={3}>\r\n          <TextField\r\n            \r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Full Name\"\r\n            variant=\"outlined\"\r\n\r\n            name=\"fullName\"\r\n            value={formik.values.fullName}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.fullName && Boolean(formik.errors.fullName)}\r\n            helperText={formik.touched.fullName && formik.errors.fullName}\r\n          />\r\n\r\n          <TextField\r\n            \r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            type = \"email\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n\r\n          <TextField\r\n            \r\n            color=\"primary\"\r\n            type=\"password\"\r\n            id=\"filled-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n            >\r\n            \r\n\r\n          </TextField>\r\n          <TextField\r\n            \r\n            color=\"primary\"\r\n            id=\"filled-basic\"\r\n            label=\"Address\"\r\n            variant=\"outlined\"\r\n            type=\"address\"\r\n\r\n            name=\"address\"\r\n            value={formik.values.address}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.address && Boolean(formik.errors.address)}\r\n            helperText={formik.touched.address && formik.errors.address}\r\n          />\r\n\r\n          <Button  variant=\"contained\" color=\"primary\" type=\"submit\">Sign Up</Button>\r\n        </Stack>\r\n      </form>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Divider from '@mui/material/Divider';\r\nimport axios from 'axios';\r\nimport { TextField, Button } from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport yellow from \"@material-ui/core/colors/yellow\";\r\nimport * as yup from 'yup';\r\nconst dev = 'http://localhost:8000';\r\n\r\nconst baseURL = window.location.hostname.split(':')[0] === 'localhost' ? dev : \"\"\r\nfunction Dashboard() {\r\n    const [Data, setData] = React.useState([]);\r\n    const [Posts, setPosts] = React.useState([]);\r\n    const [submit, setSubmit] = React.useState(false);\r\n    React.useEffect(() => {\r\n        const Email = localStorage.getItem('email')\r\n        console.log(Email);\r\n        axios.post(`${baseURL}/api/v1/profile`, {\r\n            email: Email\r\n        })\r\n        .then((res) => {\r\n                let data = res.data\r\n                setData(data);\r\n                console.log(Data);\r\n        })\r\n        .catch((err) => {\r\n                console.log(err.message);\r\n        })\r\n        return () => {\r\n            console.log('clean up')\r\n        }\r\n    }, [])\r\n    React.useEffect(()=>{\r\n        axios.get(`${baseURL}/api/v1/getpost`)\r\n        .then((res)=>{\r\n            setPosts(res.data);\r\n            console.log(Posts);\r\n        })\r\n    },[submit])\r\n    const validationSchema = yup.object({\r\n        post: yup\r\n            .string('Enter string')\r\n            .required('this field is required')\r\n    })\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            post: ''\r\n        },\r\n        onSubmit: (values) => {\r\n            axios.post(`${baseURL}/api/v1/post`,{\r\n                email: localStorage.getItem('email'),\r\n                post: values.post\r\n            })\r\n            .then((res)=>{\r\n                console.log(res);\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err.message);\r\n            })\r\n        }\r\n    })\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          \"& > *\": {\r\n            margin: theme.spacing(1),\r\n            width: theme.spacing(32),\r\n            height: theme.spacing(16)\r\n          }\r\n        },\r\n        yellowPaper: {\r\n          backgroundColor: yellow[300]\r\n        },\r\n        customBorder: {\r\n          border: `3px solid ${yellow[200]}`\r\n        },\r\n        customBorderRadius: {\r\n          borderRadius: 25\r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Box>\r\n                <h1>Dashboard</h1>\r\n                <h3> Profile Info </h3>\r\n                {\r\n                    Data.map(eachData => {\r\n                        return (\r\n                            <div>\r\n                                <h5>{`Full Name: ${eachData.fullName}`}</h5>\r\n                                <h5>{`Email: ${eachData.email}`}</h5>\r\n                                <h5>{`Address: ${eachData.address}`}</h5>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </Box>\r\n            <Divider />\r\n            <Box>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <Stack spacing={3}>\r\n                        <TextField\r\n                            multiline\r\n                            color=\"primary\"\r\n                            id=\"outlined-multiline-static\"\r\n                            label=\"Post\"\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            name=\"post\"\r\n                            value={formik.values.post}\r\n                            onChange={formik.handleChange}\r\n                            rows={4}\r\n                            error={formik.touched.post && Boolean(formik.errors.post)}\r\n                            helperText={formik.touched.post && formik.errors.post}\r\n                        />\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={()=>{setSubmit(!submit)}}>Post</Button>\r\n                    </Stack>\r\n                </form>\r\n            </Box>\r\n            <Box>\r\n                <Typography variant=\"h4\" gutterBottom >\r\n                    All Users Post\r\n                </Typography>\r\n                <Paper className={classes.customBorderRadius} elevation={15}>\r\n                    <Box p={1}>\r\n                        <Typography variant=\"p\"> Hello Everyone </Typography>\r\n                    </Box>\r\n                </Paper>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Button from '@mui/material/Button';\nimport Login from './Components/login';\nimport Signup from './Components/signup';\nimport {\n  Switch,\n  Route,\n  useHistory\n} from \"react-router-dom\";\nimport Dashboard from './Components/dashboard';\nfunction App(){\n  let history = useHistory();\n    return(\n    <div className=\"App\">\n       <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Button variant=\"h6\" component=\"div\" onClick={()=> history.push('/')}>\n            MERN project\n          </Button>\n          <Button color=\"inherit\" onClick={()=> {history.push('/signup')} }>Signup</Button>\n          <Button color=\"inherit\" onClick={()=> {history.push('/login') }}>Login</Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n      <Switch>\n        <Route path=\"/signup\">\n          <Signup/>\n        </Route>\n      <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n      </Switch>\n    </div>\n   \n  )\n  \n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}